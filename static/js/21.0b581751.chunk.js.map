{"version":3,"sources":["views/app-views/main/planner/DraggableImage.js","views/app-views/main/planner/ImageGallery.js","views/app-views/main/planner/index.js"],"names":["DraggableImage","_ref","src","x","y","id","onDrag","_jsx","Draggable","defaultPosition","children","draggable","alt","tabList","key","tab","data","furniture","description","other","ImageSelector","addImage","activeTabKey","setActiveTabKey","useState","Card","onTabChange","tabProps","size","style","display","overflowX","gap","map","img","onClick","flex","minWidth","marginBottom","cover","Flex","alignItems","justifyContent","Image","preview","padding","Planner","images","setImages","console","log","handleDrag","_","image","Number","node","_jsxs","Row","gutter","Col","span","flexDirection","Date","now","Button","type","handleSave","file","Blob","JSON","stringify","url","URL","createObjectURL","link","document","createElement","href","download","click","Upload","beforeUpload","reader","FileReader","onload","e","parse","target","result","readAsText","showUploadList","danger","borderRadius","height","overflow","background","i"],"mappings":"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","file":"static/js/21.0b581751.chunk.js","sourcesContent":["import Draggable from \"react-draggable\"\r\n\r\nconst DraggableImage = ({ src, x, y, id, onDrag }) => (\r\n  <Draggable defaultPosition={{x,y}} onDrag={onDrag}>\r\n    <img draggable={false} src={src} alt=\"\" id={id} />\r\n  </Draggable>\r\n)\r\n\r\nexport default DraggableImage\r\n","import { Card, Image } from \"antd\"\r\nimport Flex from \"components/shared-components/Flex\"\r\nimport React, { useState } from \"react\"\r\n\r\nconst furniture = [\r\n  {\r\n    src: \"/img/planner/1.png\",\r\n    description: \"Стол на 4 места\",\r\n  },\r\n  {\r\n    src: \"/img/planner/2.png\",\r\n    description: \"Стол на 2 места\",\r\n  },\r\n  {\r\n    src: \"/img/planner/3.png\",\r\n    description: \"Круглый стол на 4 места\",\r\n  },\r\n  {\r\n    src: \"/img/planner/4.png\",\r\n    description: \"Стол на 4 места с диванами\",\r\n  },\r\n]\r\nconst other = [\r\n  {\r\n    src: \"/img/planner/verticalSeparator.png\",\r\n    description: \"Вертикальный разделитель\",\r\n  },\r\n  {\r\n    src: \"/img/planner/horizontalSeparator.png\",\r\n    description: \"Горизонтальный разделитель\",\r\n  },\r\n]\r\nconst tabList = [\r\n  {\r\n    key: \"furniture\",\r\n    tab: \"Столы\",\r\n  },\r\n  {\r\n    key: \"other\",\r\n    tab: \"Прочее\",\r\n  },\r\n]\r\nconst data = {\r\n  furniture,\r\n  other,\r\n}\r\nconst ImageSelector = ({ addImage }) => {\r\n  const [activeTabKey, setActiveTabKey] = useState(\"furniture\")\r\n  return (\r\n    <Card\r\n      tabList={tabList}\r\n      activeTabKey={activeTabKey}\r\n      onTabChange={(key) => setActiveTabKey(key)}\r\n      tabProps={{\r\n        size: \"large\",\r\n      }}\r\n    >\r\n      <div style={{ display: \"flex\", overflowX: \"auto\", gap: \"16px\" }}>\r\n        {data[activeTabKey].map((img) => (\r\n          <Card\r\n            key={img.src}\r\n            onClick={() => addImage(img.src)}\r\n            style={{\r\n              flex: \"0 0 auto\",\r\n              minWidth: \"150px\",\r\n              marginBottom: \"0px\",\r\n            }}\r\n            cover={\r\n              <Flex alignItems=\"center\" justifyContent=\"center\">\r\n                <Image preview={false} src={img.src} alt=\"\" style={{padding:\"10px\"}} />\r\n              </Flex>\r\n            }\r\n          >\r\n            {img.description}\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default ImageSelector\r\n","import { useState } from \"react\"\r\nimport DraggableImage from \"./DraggableImage\"\r\nimport ImageSelector from \"./ImageGallery\"\r\nimport { Button, Card, Col, Row, Upload } from \"antd\"\r\nimport Flex from \"components/shared-components/Flex\"\r\nconst Planner = () => {\r\n  const [images, setImages] = useState([])\r\n  console.log(images)\r\n  const handleSave = () => {\r\n    const file = new Blob([JSON.stringify(images)], {\r\n      type: \"application/json\",\r\n    })\r\n    const url = URL.createObjectURL(file)\r\n    const link = document.createElement(\"a\")\r\n    link.href = url\r\n    link.download = \"Planner.json\"\r\n    link.click()\r\n  }\r\nconst handleLoad = (file) => {\r\n  const reader = new FileReader()\r\n  reader.onload = (e) => {\r\n    const images = JSON.parse(e.target.result)\r\n    setImages(images)\r\n  }\r\n  reader.readAsText(file)\r\n  return false // Prevent the upload\r\n}\r\n  const handleDrag = (_, data) => {\r\n    const { x, y } = data\r\n    setImages(\r\n      images.map((image) =>\r\n        image.id === Number(data.node.id) ? { ...image, x, y } : image\r\n      )\r\n    )\r\n  }\r\n  const handleAdd = (src) => {\r\n    setImages([...images, { src: src, id: Date.now(), x: 0, y: 0 }])\r\n  }\r\n  return (\r\n    <Row gutter={16}>\r\n      <Col span={10}>\r\n        <Flex flexDirection=\"column\">\r\n          <ImageSelector addImage={handleAdd} />\r\n          <Card>\r\n            <Flex justifyContent=\"around\">\r\n              <Button type=\"primary\" onClick={handleSave}>\r\n                Сохранить\r\n              </Button>\r\n              <Upload beforeUpload={handleLoad} showUploadList={false}>\r\n                <Button>Загрузить</Button>\r\n              </Upload>\r\n              <Button type=\"dashed\" danger onClick={() => setImages([])}>\r\n                Удалить все\r\n              </Button>\r\n            </Flex>\r\n          </Card>\r\n        </Flex>\r\n      </Col>\r\n      <Col span={14}>\r\n        <div\r\n          style={{\r\n            borderRadius: \"0.625rem\",\r\n            height: \"800px\",\r\n            overflow: \"auto\",\r\n            background: \"black\",\r\n          }}\r\n        >\r\n          {images.map((i) => (\r\n            <DraggableImage\r\n              src={i.src}\r\n              key={i.id}\r\n              x={i.x}\r\n              y={i.y}\r\n              id={i.id}\r\n              onDrag={handleDrag}\r\n            />\r\n          ))}\r\n        </div>\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default Planner\r\n"],"sourceRoot":""}